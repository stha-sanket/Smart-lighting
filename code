#include <IRremote.h> // Include the IRremote library for IR communication
#define code1  16582903   // Define the code received from button 1
#define code3  16580863   // Define the code received from "power button" remote control
int ldr = A5; // Define the analog pin connected to the LDR (Light Dependent Resistor)
int ldr_value; // Variable to store the LDR reading
int light = 2; // Define the pin connected to the light source
int push_state = LOW; // Variable to store the state of a push button

int RECV_PIN = 11; // Define the pin where the IR receiver is connected
IRrecv irrecv(RECV_PIN); // Create an instance of the IRrecv class for receiving IR signals
decode_results results; // Variable to store the decoded IR signal

void setup()
{
  Serial.begin(9600); // Initialize serial communication for debugging
  pinMode(light, OUTPUT); // Set the pin connected to the light source as an output
  pinMode(ldr, INPUT);    // Set the pin connected to the LDR as an input
  pinMode(12, INPUT); // Set pin 12 as an input (presumably connected to a push button)
  irrecv.enableIRIn(); // Enable IR receiver
}

void loop()
{
  if (digitalRead(12) == HIGH) // Check if the push button is pressed
  {
    push_state = !push_state; // Toggle the state of push_state
  }
  Serial.println(push_state); // Print the state of push_state to serial monitor for debugging

  if (push_state == HIGH) // Check if the push button is in the ON state
  {
    ldr_value = analogRead(ldr); // Read the value from the LDR

    if (ldr_value > 512) // Check if the LDR reading exceeds a threshold
      digitalWrite(light, LOW); // Turn off the light if ambient light is too high
    else
      digitalWrite(light, HIGH); // Turn on the light if ambient light is low
  }
  else
  {
    digitalWrite(light, LOW); // Turn off the light if the push button is in the OFF state
  }

  if (irrecv.decode(&results)) // Check if an IR signal is received
  {
    unsigned int value = results.value; // Get the value of the received IR signal
    Serial.println(value); // Print the received value to serial monitor for debugging

    switch (value) // Check the received IR signal value
    {
    case 65535: // Check if the received IR signal matches the code for button 1
      digitalWrite(light, HIGH); // Turn on the light
      delay(6000); // Delay for 6 seconds
      break;
    default:
      digitalWrite(light, LOW); // Turn off the light
      break;
    }

    irrecv.resume(); // Receive the next IR signal
  }
}
